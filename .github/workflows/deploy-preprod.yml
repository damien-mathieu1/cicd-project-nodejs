name: Deploy Preprod Environment

# Trigger when someone comments "/deploy-preprod" on a Pull Request
on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  contents: read
  issues: write

jobs:
  deploy-preprod:
    # Only run on PR comments, not issue comments
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/deploy-preprod')

    runs-on: ubuntu-latest

    steps:
      - name: React to comment with eyes
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            return {
              number: context.issue.number,
              branch: pr.data.head.ref,
              sha: pr.data.head.sha,
              nodePort: 30000 + context.issue.number
            };

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Render ArgoCD Application manifest
        id: render
        run: |
          PR_NUMBER="${{ fromJSON(steps.pr.outputs.result).number }}"
          PR_BRANCH="${{ fromJSON(steps.pr.outputs.result).branch }}"
          PR_HEAD_SHA="${{ fromJSON(steps.pr.outputs.result).sha }}"
          NODEPORT="${{ fromJSON(steps.pr.outputs.result).nodePort }}"

          sed -e "s/{{PR_NUMBER}}/${PR_NUMBER}/g" \
              -e "s/{{PR_BRANCH}}/${PR_BRANCH}/g" \
              -e "s/{{PR_HEAD_SHA}}/${PR_HEAD_SHA}/g" \
              -e "s/{{NODEPORT}}/${NODEPORT}/g" \
              .argocd/preprod-application-template.yaml > /tmp/preprod-app.yaml

          echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          echo "nodeport=${NODEPORT}" >> $GITHUB_OUTPUT
          echo "branch=${PR_BRANCH}" >> $GITHUB_OUTPUT

      - name: Create ArgoCD Application
        run: |
          kubectl apply -f /tmp/preprod-app.yaml

          # Wait a bit for ArgoCD to detect the application
          sleep 5

      - name: Create namespace if needed
        run: |
          kubectl create namespace preprod-pr-${{ steps.render.outputs.pr_number }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Comment on PR with deployment info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.render.outputs.pr_number }};
            const nodePort = ${{ steps.render.outputs.nodeport }};
            const branch = "${{ steps.render.outputs.branch }}";

            const body = `## üöÄ Preprod Environment Deployed

            Your preprod environment has been created successfully!

            ### Details
            - **Application**: \`cicd-project-pr-${prNumber}\`
            - **Namespace**: \`preprod-pr-${prNumber}\`
            - **Branch**: \`${branch}\`
            - **NodePort**: \`${nodePort}\`

            ### Access
            To access your preprod environment:
            \`\`\`bash
            # Port-forward (recommended for local testing)
            kubectl port-forward -n preprod-pr-${prNumber} svc/cicd-project-pr-${prNumber}-cicd-app-chart 8${prNumber}:80
            # Then open: http://localhost:8${prNumber}

            # Or access via NodePort (if cluster has external IPs)
            # http://<node-ip>:${nodePort}
            \`\`\`

            ### ArgoCD
            View in ArgoCD UI: http://localhost:8080/applications/cicd-project-pr-${prNumber}

            **‚ö†Ô∏è Manual Sync Required**: Go to ArgoCD UI and click "Sync" to deploy the application.

            ### Cleanup
            This preprod will be automatically deleted when the PR is closed or merged.
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

      - name: React to comment with rocket
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

      - name: React to comment with confused on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'confused'
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '‚ùå Failed to deploy preprod environment. Check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            });
