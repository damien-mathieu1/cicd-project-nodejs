name: Cleanup Preprod Environment

# Trigger when a Pull Request is closed (merged or just closed)
on:
  pull_request:
    types: [closed]

permissions:
  pull-requests: write
  contents: read

jobs:
  cleanup-preprod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Check if preprod exists
        id: check
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"

          if kubectl get application cicd-project-pr-${PR_NUMBER} -n argocd 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "No preprod environment found for PR #${PR_NUMBER}"
          fi

      - name: Delete ArgoCD Application
        if: steps.check.outputs.exists == 'true'
        run: |
          PR_NUMBER="${{ steps.check.outputs.pr_number }}"

          echo "Deleting ArgoCD Application: cicd-project-pr-${PR_NUMBER}"
          kubectl delete application cicd-project-pr-${PR_NUMBER} -n argocd --wait=false

          # The finalizer will cleanup all resources deployed by the application
          echo "Waiting for application cleanup..."
          sleep 10

      - name: Delete namespace (if still exists)
        if: steps.check.outputs.exists == 'true'
        run: |
          PR_NUMBER="${{ steps.check.outputs.pr_number }}"
          NAMESPACE="preprod-pr-${PR_NUMBER}"

          if kubectl get namespace ${NAMESPACE} 2>/dev/null; then
            echo "Deleting namespace: ${NAMESPACE}"
            kubectl delete namespace ${NAMESPACE} --wait=false
          else
            echo "Namespace ${NAMESPACE} already deleted"
          fi

      - name: Comment on PR
        if: steps.check.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.check.outputs.pr_number }};

            const body = `## üßπ Preprod Environment Cleaned Up

            The preprod environment for this PR has been deleted:
            - **Application**: \`cicd-project-pr-${prNumber}\` ‚úÖ Deleted
            - **Namespace**: \`preprod-pr-${prNumber}\` ‚úÖ Deleted
            - **All resources**: ‚úÖ Cleaned up

            Thank you for testing! üéâ
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

      - name: Summary
        if: steps.check.outputs.exists == 'true'
        run: |
          PR_NUMBER="${{ steps.check.outputs.pr_number }}"
          echo "‚úÖ Preprod environment for PR #${PR_NUMBER} has been cleaned up successfully!"

      - name: No preprod found
        if: steps.check.outputs.exists == 'false'
        run: |
          echo "‚ÑπÔ∏è No preprod environment found for this PR. Nothing to clean up."
