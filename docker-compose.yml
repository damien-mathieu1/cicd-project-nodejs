services:
  app:
    build: .
    container_name: app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3333
      HOST: 0.0.0.0
      LOG_LEVEL: info
      SESSION_DRIVER: cookie
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      APP_KEY: Pg_e79wvsahZGUYC5dmZ3c2BpmUteW_l
      DB_DATABASE: app
    ports:
      - "3333:3333"

  db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=app
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root", "-d", "app"]
      interval: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prometheus:latest
    container_name: prometheus_container
    ports :
      - "9090:9090"
    volumes:
      - ./prom.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    restart: always

volumes:
  grafana_data:

networks:
  monitoring:
      driver: bridge
      
      
