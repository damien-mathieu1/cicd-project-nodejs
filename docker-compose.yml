services:
  app:
    build: .
    container_name: app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring
    environment:
      NODE_ENV: production
      PORT: 3333
      HOST: 0.0.0.0
      LOG_LEVEL: info
      SESSION_DRIVER: cookie
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      APP_KEY: Pg_e79wvsahZGUYC5dmZ3c2BpmUteW_l
      DB_DATABASE: app
    ports:
      - "3333:3333"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/metrics"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=app
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root", "-d", "app"]
      interval: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus 
    container_name: prometheus_container
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "9090:9090"
    volumes:
      - ./prom.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9090"]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s
    networks:
      - monitoring
    restart: always


  grafana:
    image: grafana/grafana
    container_name: grafana_container
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
    restart: always

volumes:
  grafana_data:

networks:
  monitoring:
      driver: bridge
      
      
